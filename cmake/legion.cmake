set(LEGION_NAME legion)

if (CMAKE_BUILD_TYPE MATCHES Debug)
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DPRIVILEGE_CHECKS -DDEBUG_REALM -DDEBUG_LEGION -DBOUNDS_CHECKS -DENABLE_LEGION_TLS -ggdb")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_LEGION_TLS")

find_package(MPI REQUIRED)

ExternalProject_get_property(${GASNET_NAME} INSTALL_DIR)
set(GASNET_INSTALL_DIR ${INSTALL_DIR})

ExternalProject_get_property(${HDF5_NAME} INSTALL_DIR)
set(HDF5_INSTALL_DIR ${INSTALL_DIR})

message(STATUS "Building ${LEGION_NAME}")
ExternalProject_Add(${LEGION_NAME}
 DEPENDS ${GASNET_NAME} ${HDF5_NAME}
 SOURCE_DIR ${PROJECT_SOURCE_DIR}/legion
 PREFIX ${LEGION_NAME}
 INSTALL_DIR ${LEGION_NAME}/install
 CONFIGURE_COMMAND ${CMAKE_COMMAND}
   -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
   -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
   -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
   -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
   -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
   -DMPI_C_COMPILER:FILEPATH=${MPI_C_COMPILER}
   -DMPI_CXX_COMPILER:FILEPATH=${MPI_CXX_COMPILER}
   -DCMAKE_SHARED_LINKER_FLAGS:STRING=${CMAKE_SHARED_LINKER_FLAGS}
   -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
   -DGASNet_ROOT_DIR:PATH=${GASNET_INSTALL_DIR}
   -DGASNet_INCLUDE_DIR:PATH=${GASNET_INSTALL_DIR}/include
   -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
   -DGASNet_CONDUIT:STRING=${GASNet_CONDUIT}
   ${Legion_GASNet_OPTS}
   -DLegion_USE_GASNet=ON
   -DLegion_USE_CUDA=${LEGION_USE_CUDA}
   -DLegion_USE_HDF5=${LEGION_USE_HDF5}
   -DHDF5HL_LIBRARY:PATH=${HDF5_HL_LIBRARIES}
   -DHDF5_LIBRARY:PATH=${HDF5_LIBRARIES}
   -DSZIP_LIBRARY:PATH=${SZIP_LIBRARIES}
   -DZLIB_LIBRARY=${ZLIB_LIBRARIES}
   -DLegion_BUILD_EXAMPLES=${LEGION_BUILD_EXAMPLES}
   -DREALM_USE_OPENMP=${LEGION_USE_OPENMP}
   -DLegion_USE_Kokkos=${LEGION_USE_KOKKOS}
   -DKOKKOS_CXX_COMPILER=${CMAKE_CXX_COMPILER}
   -DCOMPILER_SUPPORTS_MARCH=OFF
   <SOURCE_DIR>
)
ExternalProject_get_property(${LEGION_NAME} INSTALL_DIR)
install(DIRECTORY ${INSTALL_DIR}/ DESTINATION ${CMAKE_INSTALL_PREFIX} USE_SOURCE_PERMISSIONS)
